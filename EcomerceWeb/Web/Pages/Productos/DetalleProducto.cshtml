@page
@model Web.Pages.Productos.DetalleProductoModel
@{
}
<section class="py-5" style="margin-top: 120px;">
    <div class="container">
        <div class="row">
            
            <div class="col-lg-6">
                <div class="card p-4 mb-4">
                    <div class="text-center mb-3">
                        <img src="@Html.DisplayFor(modelo => modelo.producto.ImagenUrl)" alt="Producto" class="img-fluid w-100 rounded">
                    </div>
                   
                </div>
            </div>

            
            <div class="col-lg-6">
                <h2 class="mb-3">@Html.DisplayFor(modelo => modelo.producto.Nombre)</h2>
                
                <p class="mb-4 text-secondary">
                    @Html.DisplayFor(modelo => modelo.producto.Descripcion)
                </p>
                <h4 class="text-primary fw-bold mb-4">$@Html.DisplayFor(modelo => modelo.producto.Precio)</h4>
                

                <form method="post">


                    
                    <div class="mb-4">
                        <h6>Cantidad</h6>
                        <div class="input-group input-group-sm">
                            <button class="btn btn-outline-secondary btn-decrease" type="button">
                                <i class="bi bi-dash"></i>
                            </button>
                            <input id="cantidad" asp-for="carritoProducto.cantidad" type="number" class="form-control quantity-input" value="1" min="1" max="@Model.producto.Stock"  oninvalid="this.setCustomValidity('El stock maximo del producto es de @Model.producto.Stock asi que ingresa un valor menor')" oninput="this.setCustomValidity('')" />
                            <button class="btn btn-outline-secondary btn-increase" type="button">
                                <i class="bi bi-plus"></i>
                            </button>
                           
                        </div>
                        @{
                            var errorStock = TempData["ErrorStock"] as string;
                        }
                        @if (!string.IsNullOrEmpty(errorStock))
                        {
                            <div class="alert alert-danger">
                                @errorStock
                            </div>
                        }
                    </div>
                    <input asp-for="carritoProducto.productosId" type="hidden" id="idProducto" value="@Model.producto.IdProducto" />
                    
                   

                    
                    @if (User.IsInRole("2"))
                    {
                        <div class="d-flex gap-2 flex-wrap">
                            <button class="btn btn-outline-primary w-100">Add to Cart</button>
                        </div>
                    }

                </form>
                <input type="hidden" id="maxStock" value="@Model.producto.Stock" />
            </div>
        </div>
    </div>
</section>
@section Scripts {
    <script src="~/js/busquedasindex.js"></script>
    
    <script>
        const input = document.querySelector(".quantity-input");
        const btnIncrease = document.querySelector(".btn-increase");
        const btnDecrease = document.querySelector(".btn-decrease");

        
        const maxStock = parseInt(document.getElementById("maxStock").value);

        
        function validarStock() {
            let cantidad = parseInt(input.value) || 1;
            let minValue = parseInt(input.min) || 1;

            if (cantidad < minValue) {
                cantidad = minValue;
                input.value = cantidad;
            }

            if (cantidad >= maxStock) {
                btnIncrease.disabled = true; 
            } else {
                btnIncrease.disabled = false; 
            }
        }

        
        btnIncrease.addEventListener("click", () => {
            input.value = (parseInt(input.value) || 0) + 1;
            validarStock();
        });

        btnDecrease.addEventListener("click", () => {
            let minValue = parseInt(input.min) || 1;
            input.value = Math.max((parseInt(input.value) || 0) - 1, minValue);
            validarStock();
        });

        
        input.addEventListener("input", validarStock);

        
        validarStock();

              
    </script>

}